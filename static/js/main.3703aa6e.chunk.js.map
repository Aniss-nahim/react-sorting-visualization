{"version":3,"sources":["redux/action-types/AnimationActionTypes.js","helper/delayAnimation.js","redux/action-creators/AnimationActions.js","algorithms/index.js","redux/action-types/ArrayActionTypes.js","helper/randomArray.js","redux/action-creators/ArrayActions.js","redux/action-types/ConfigActionTypes.js","redux/action-types/AlertActionTypes.js","redux/action-creators/AlertActions.js","components/SortingForm.js","redux/action-creators/ConfigActions.js","components/NumberBar.js","components/Visualizer.js","components/status/Array.js","components/status/QuickSortStatus.js","hooks/useAnimation.js","hooks/useQuickSort.js","components/QuickSort.js","components/status/MergeSortStatus.js","hooks/useMergeSort.js","components/MergeSort.js","Alert.js","hooks/useHeapSort.js","components/status/HeapSortStatus.js","components/HeapSort.js","hooks/useBubbleSort.js","components/status/BubbleSortStatus.js","components/BubbleSort.js","App.js","redux/reducers/ArrayReducer.js","redux/reducers/AnimationReducer.js","redux/reducers/ConfigReducer.js","redux/reducers/AlertReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ANIMATION_UPDATE","ANIMATION_CLEAR","delay","ms","Promise","resolve","setTimeout","updateAnimation","animation","dispatch","getState","a","speed","config","type","actionTypes","payload","registredAlgorithms","quickSort","array","start","end","quickSortPartition","index","pivot","pivotIndex","j","i","first","second","action","swap","temp","mergeSort","half","Math","floor","merge","slice","length","k","heapSort","parent","left","right","buildMaxHeap","heapify","lastParent","iParent","rightNode","leftNode","maxIndex","bubbleSort","GENERATE_RANDOM_ARRAY","ARRAY_SORTED","ARRAY_UPDATED","START_SORTING","STOP_SORTING","randomArray","min","max","random","createArray","minValue","maxValue","CONFIG_UPDATE","CONFIG_RESET","ALERT_CREATED","ALERT_AUTO_REMOVE","ALERT_DELETED","alertPush","message","SortingForm","createApp","isSorting","useSelector","state","useDispatch","handleChange","event","target","name","value","parseInt","putConfig","validate","isValideLength","isvalideSpeed","isValideAlgorithm","isNaN","minSpeed","maxSpeed","minLength","maxLength","includes","algorithm","className","onSubmit","e","preventDefault","htmlFor","id","onChange","disabled","onClick","NumberBar","number","color","style","height","Visualizer","colorizer","regenerate","isSorted","map","Array","item","QuickSortStatus","useAnimation","sortingAlgorithm","sort","then","catch","error","console","log","finally","useQuickSort","useEffect","QuickSort","startSorting","MergeSortStatus","useMergeSort","MergeSort","Alert","alerts","deleteAlert","alertDelete","success","icon","alert","role","useHeapSort","HeapSortStatus","HeapSort","useBubbleSort","BubbleSortStatus","BubbleSort","App","useState","currentAlgo","setCurrentAlgo","getComponent","initState","arrayReducer","animationReducer","configReducer","alertReducer","filter","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3703aa6e.chunk.js","sourcesContent":["export const ANIMATION_UPDATE = \"ANIMATION_UPDATE\";\r\nexport const ANIMATION_CLEAR = \"ANIMATION_CLEAR\";\r\n","/**\r\n * Delay using setTimeout async function\r\n */\r\n\r\nexport const delay = (ms) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n","import * as actionTypes from \"../action-types/AnimationActionTypes\";\r\nimport { delay } from \"../../helper/delayAnimation\";\r\n\r\nexport const updateAnimation = (animation) => async (dispatch, getState) => {\r\n  const { speed } = getState().config;\r\n  await delay(speed);\r\n  dispatch({\r\n    type: actionTypes.ANIMATION_UPDATE,\r\n    payload: animation,\r\n  });\r\n};\r\n","/**\r\n * Sorting algorithms services\r\n * @author Aniss Nahim\r\n * @license MIT\r\n */\r\nimport { updateAnimation } from \"../redux/action-creators/AnimationActions\";\r\n\r\nexport const registredAlgorithms = [\r\n  \"quicksort\",\r\n  \"mergesort\",\r\n  \"heapsort\",\r\n  \"bubblesort\",\r\n];\r\n\r\n/**\r\n * Sorts array using Quick Sort algorithm\r\n * AVG Time complexity : O(nlogn)\r\n * AVG Space complexity : O(logn)\r\n * @param {Array} array unsorted array\r\n * @param {Integer} start starting index of the array\r\n * @param {Integer} end ending index of the array\r\n * @param {Function} dispatch dispatch action\r\n * @returns {void}\r\n */\r\nexport const quickSort = async (array, start, end, dispatch) => {\r\n  if (start >= end) return;\r\n  let index = await quickSortPartition(array, start, end, dispatch);\r\n  await quickSort(array, start, index - 1, dispatch);\r\n  await quickSort(array, index + 1, end, dispatch);\r\n};\r\n\r\n/**\r\n * Patitions array into two sub arrays\r\n * Time complexity : O(n)\r\n * Space complexity : O(n)\r\n * first sub array contains elements less then or equal to pivot\r\n * second sub array contains elements greater then pivot\r\n * @param {Array} array array to partition\r\n * @param {Integer} start starting index of the array\r\n * @param {Integer} end ending index of the array\r\n * @param {Function} dispatch dispatch action\r\n * @returns {Integer} pivote correct position\r\n */\r\nconst quickSortPartition = async (array, start, end, dispatch) => {\r\n  let pivot = array[end];\r\n  let pivotIndex = end;\r\n  let j = start - 1;\r\n  for (let i = start; i < end; i++) {\r\n    // i is looking for the first element less than pivot\r\n    // j is looking for the first element greater than pivot\r\n    await dispatch(\r\n      updateAnimation({\r\n        pivotIndex,\r\n        first: i,\r\n        second: j,\r\n        action: \"From left, looking for element less than pivot\",\r\n      })\r\n    );\r\n    if (array[i] < pivot) {\r\n      j++;\r\n      await dispatch(\r\n        updateAnimation({\r\n          pivotIndex,\r\n          first: i,\r\n          second: j,\r\n          action: \"From left, looking for element greater than pivot\",\r\n        })\r\n      );\r\n      swap(array, i, j);\r\n      await dispatch(\r\n        updateAnimation({\r\n          pivotIndex,\r\n          first: i,\r\n          second: j,\r\n          action: `swop`,\r\n        })\r\n      );\r\n    }\r\n  }\r\n  swap(array, j + 1, pivotIndex);\r\n  await dispatch(\r\n    updateAnimation({\r\n      pivotIndex: j + 1,\r\n      first: end,\r\n      second: j,\r\n      action: \"Pivot correct position\",\r\n    })\r\n  );\r\n  return j + 1;\r\n};\r\n\r\n/**\r\n * Swaps two elements for a given array\r\n * @param {Array} array\r\n * @param {Integer} i\r\n * @param {Integer} j\r\n */\r\nconst swap = (array, i, j) => {\r\n  let temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n};\r\n\r\n/**\r\n * Sorts array using Merge Sort algorithm :\r\n * Time complexity : O(nlogn)\r\n * Space complexity : O(n + n/2) <=> O(n)\r\n * Temporary array is required otherwise the time complexity will be O(n^2logn)\r\n * @param {Array} array unsorted array\r\n * @param {Integer} start starting index of the array\r\n * @param {Integer} end ending index of the array\r\n * @returns {Promise}\r\n */\r\nexport const mergeSort = async (array, start, end, dispatch) => {\r\n  if (start >= end) return;\r\n  let half = Math.floor((start + end) / 2);\r\n  await mergeSort(array, start, half, dispatch);\r\n  await mergeSort(array, half + 1, end, dispatch);\r\n  await merge(array, start, half, end, dispatch);\r\n};\r\n\r\n/**\r\n * Merge two virtual (subarrays of the main array) arrays\r\n * @param {Array} array\r\n * @param {Integer} start starting index of the array\r\n * @param {Integer} half middle index of the array\r\n * @param {Integer} end ending index of the array\r\n * @param {Function} dispatch dispatch action\r\n * @return {Promise}\r\n */\r\nconst merge = async (array, start, half, end, dispatch) => {\r\n  let temp = array.slice(half + 1, end + 1); // O(N)\r\n  let i = half; // index on main array\r\n  let j = temp.length - 1; // index on temp array\r\n  let k = end; // index on\r\n\r\n  await dispatch(\r\n    updateAnimation({\r\n      action: \"Start merging\",\r\n      first: i,\r\n      second: j + half + 1,\r\n    })\r\n  );\r\n\r\n  while (i >= start && j >= 0) {\r\n    await dispatch(\r\n      updateAnimation({ action: \"comparing\", first: i, second: j + half + 1 })\r\n    );\r\n\r\n    if (array[i] > temp[j]) {\r\n      array[k--] = array[i];\r\n      await dispatch(\r\n        updateAnimation({ action: \"merging\", first: i, second: j + half + 1 })\r\n      );\r\n      i--;\r\n    } else {\r\n      array[k--] = temp[j];\r\n      await dispatch(\r\n        updateAnimation({ action: \"merging\", first: i, second: j + half + 1 })\r\n      );\r\n      j--;\r\n    }\r\n  }\r\n\r\n  while (i >= start) {\r\n    array[k--] = array[i];\r\n    await dispatch(\r\n      updateAnimation({\r\n        action: \"remaining elements\",\r\n        first: i,\r\n        second: j + half + 1,\r\n      })\r\n    );\r\n    i--;\r\n  }\r\n\r\n  while (j >= 0) {\r\n    array[k--] = temp[j];\r\n    await dispatch(\r\n      updateAnimation({\r\n        action: \"remaining elements\",\r\n        first: i,\r\n        second: j + half + 1,\r\n      })\r\n    );\r\n    j--;\r\n  }\r\n};\r\n\r\n/**\r\n * Sorts array from start to end using Heap sort algorithm\r\n * AVG Time complexity : O(nlogn)\r\n * AVG Space complexity : O(1)\r\n * @param {Array} array\r\n * @param {Integer} start\r\n * @param {Integer} end\r\n * @param {Function} dispatch\r\n */\r\nexport const heapSort = async (array, start, end, dispatch) => {\r\n  await dispatch(\r\n    updateAnimation({\r\n      parent: -1,\r\n      left: -1,\r\n      right: -1,\r\n      action: \"Building max heap\",\r\n    })\r\n  );\r\n  await buildMaxHeap(array, start, end, dispatch);\r\n  for (let i = end; i >= start; i--) {\r\n    await dispatch(\r\n      updateAnimation({\r\n        parent: start,\r\n        left: -1,\r\n        right: -1,\r\n        action: \"Max heap built, swap parent with last element\",\r\n      })\r\n    );\r\n    swap(array, start, i);\r\n    await heapify(array, start, i - 1, dispatch);\r\n  }\r\n};\r\n\r\n/**\r\n * Builds max heap from a given array\r\n * last parent node is at the index floor(n/2) - 1\r\n * @param {Array} array\r\n * @param {Integer} start\r\n * @param {Integer} end\r\n * @param {Function} dispatch\r\n * @return {Promise}\r\n */\r\nconst buildMaxHeap = async (array, start, end, dispatch) => {\r\n  const lastParent = Math.floor((end + start) / 2) - 1;\r\n  await dispatch(\r\n    updateAnimation({\r\n      parent: lastParent,\r\n      right: -1,\r\n      left: -1,\r\n      action: \"heapify start\",\r\n    })\r\n  );\r\n  for (let iParent = lastParent; iParent >= 0; iParent--) {\r\n    await heapify(array, iParent, end, dispatch);\r\n  }\r\n};\r\n\r\n/**\r\n * heapifies array starting from iParent to the root\r\n * Each parent is garter than or equal to it's left and right children\r\n * @param {Array} array\r\n * @param {Integer} iParent\r\n * @param {Integer} end\r\n * @param {Function} dispatch\r\n */\r\nconst heapify = async (array, iParent, end, dispatch) => {\r\n  const leftNode = 2 * iParent + 1;\r\n  const rightNode = leftNode + 1;\r\n  await dispatch(\r\n    updateAnimation({\r\n      parent: iParent,\r\n      right: rightNode,\r\n      left: leftNode,\r\n      action: \"Heapify\",\r\n    })\r\n  );\r\n  let maxIndex = iParent;\r\n  if (leftNode <= end && array[maxIndex] < array[leftNode]) {\r\n    maxIndex = leftNode;\r\n  }\r\n\r\n  if (rightNode <= end && array[maxIndex] < array[rightNode]) {\r\n    maxIndex = rightNode;\r\n  }\r\n\r\n  if (maxIndex !== iParent) {\r\n    swap(array, maxIndex, iParent);\r\n    await dispatch(\r\n      updateAnimation({\r\n        parent: iParent,\r\n        right: rightNode,\r\n        left: leftNode,\r\n        action: \"Swap\",\r\n      })\r\n    );\r\n    await heapify(array, maxIndex, end, dispatch);\r\n  }\r\n};\r\n\r\n/**\r\n * Sorts array from start to end using Bubble sort algorithm\r\n * AVG Time complexity : O(n^2)\r\n * Space complexity : O(1)\r\n * @param {Array} array\r\n * @param {Integer} start\r\n * @param {Integer} end\r\n * @param {Function} dispatch\r\n */\r\nexport const bubbleSort = async (array, start, end, dispatch) => {\r\n  for (let i = start + 1; i <= end; i++) {\r\n    for (let j = start; j <= end - i; j++) {\r\n      await dispatch(\r\n        updateAnimation({\r\n          action: \"Comparing\",\r\n          first: j,\r\n          second: j + 1,\r\n        })\r\n      );\r\n      if (array[j] > array[j + 1]) {\r\n        await dispatch(\r\n          updateAnimation({\r\n            action: \"Swap\",\r\n            first: j,\r\n            second: j + 1,\r\n          })\r\n        );\r\n        swap(array, j, j + 1);\r\n      }\r\n    }\r\n  }\r\n};\r\n","export const GENERATE_RANDOM_ARRAY = \"GENERATE_RANDOM_ARRAY\";\r\nexport const ARRAY_SORTED = \"ARRAY_SORTED\";\r\nexport const ARRAY_UPDATED = \"ARRAY_UPDATED\";\r\nexport const START_SORTING = \"START_SORTING\";\r\nexport const STOP_SORTING = \"STOP_SORTING\";\r\n","/**\r\n * Random array generator\r\n * Generat array with length {length} with values between {min} and {max}\r\n * {min} and {max} are included\r\n * @author Aniss Nahim\r\n * @license MIT\r\n */\r\n\r\n/**\r\n * Generat random array\r\n * @param {Integer} length\r\n * @param {Integer} min\r\n * @param {Integer} max\r\n * @returns {Array}\r\n */\r\nconst randomArray = (length, min, max) => {\r\n  let array = [];\r\n  for (let i = 0; i < length; i++) {\r\n    array[i] = Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n  return array;\r\n};\r\n\r\nexport default randomArray;\r\n","import * as actionTypes from \"../action-types/ArrayActionTypes\";\r\nimport randomArray from \"../../helper/randomArray\";\r\n\r\nexport const createArray = () => (dispatch, getState) => {\r\n  const { length, minValue, maxValue } = getState().config;\r\n  dispatch({\r\n    type: actionTypes.GENERATE_RANDOM_ARRAY,\r\n    payload: randomArray(length, minValue, maxValue),\r\n  });\r\n};\r\n\r\nexport const sortingArray = () => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.START_SORTING,\r\n  });\r\n};\r\n\r\nexport const stopSortingArray = () => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.STOP_SORTING,\r\n  });\r\n};\r\n\r\nexport const sortedArray = () => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.ARRAY_SORTED,\r\n  });\r\n};\r\n","export const CONFIG_UPDATE = \"CONFIG_UPDATE\";\r\nexport const CONFIG_RESET = \"CONFIG_RESET\";\r\n","export const ALERT_CREATED = \"ALERT_CREATED\";\r\nexport const ALERT_AUTO_REMOVE = \"ALERT_AUTO_REMOVE\";\r\nexport const ALERT_DELETED = \"ALERT_DELETED\";\r\n","import * as actionTypes from \"../action-types/AlertActionTypes\";\r\nimport { delay } from \"../../helper/delayAnimation\";\r\n\r\n/**\r\n * Dispatch push alert action to the AlertReducer\r\n * The alert will be removed after 5seconds\r\n * @param {Object} param0\r\n * @returns {Promise}\r\n */\r\nexport const alertPush =\r\n  ({ type, message }) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.ALERT_CREATED,\r\n      payload: { type, message },\r\n    });\r\n    await delay(5000);\r\n    dispatch({\r\n      type: actionTypes.ALERT_AUTO_REMOVE,\r\n    });\r\n  };\r\n\r\nexport const alertDelete = (index) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.ALERT_DELETED,\r\n    payload: index,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registredAlgorithms } from \"../algorithms\";\r\nimport { putConfig, resetConfig } from \"../redux/action-creators/ConfigActions\";\r\nimport { alertPush } from \"../redux/action-creators/AlertActions\";\r\nimport { AdjustmentsIcon, RefreshIcon } from \"@heroicons/react/solid\";\r\n\r\nconst SortingForm = ({ createApp }) => {\r\n  const { isSorting } = useSelector((state) => state.array);\r\n  const config = useSelector((state) => state.config);\r\n  const dispatch = useDispatch();\r\n\r\n  // handle Changes\r\n  const handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    let value = target.value;\r\n    if (name === \"speed\" || name === \"length\") {\r\n      value = parseInt(value, 10);\r\n    }\r\n    dispatch(putConfig({ ...config, [name]: value }));\r\n  };\r\n\r\n  // reset config values\r\n  const reset = () => {\r\n    dispatch(resetConfig());\r\n  };\r\n\r\n  // validate values and create app using params\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      createApp();\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    return isValideLength() && isvalideSpeed() && isValideAlgorithm();\r\n  };\r\n\r\n  // Speed validation\r\n  const isvalideSpeed = () => {\r\n    if (\r\n      !isNaN(config.speed) &&\r\n      config.speed >= config.minSpeed &&\r\n      config.speed <= config.maxSpeed\r\n    )\r\n      return true;\r\n\r\n    dispatch(\r\n      alertPush({\r\n        type: \"error\",\r\n        message: `Speed should be a number between ${config.minSpeed} and ${config.maxSpeed}`,\r\n      })\r\n    );\r\n    return false;\r\n  };\r\n\r\n  // Length validation\r\n  const isValideLength = () => {\r\n    if (\r\n      !isNaN(config.length) &&\r\n      config.length >= config.minLength &&\r\n      config.length <= config.maxLength\r\n    )\r\n      return true;\r\n\r\n    dispatch(\r\n      alertPush({\r\n        type: \"error\",\r\n        message: `Length should be a number between ${config.minLength} and ${config.maxLength}`,\r\n      })\r\n    );\r\n    return false;\r\n  };\r\n\r\n  // Algorithm validation\r\n  const isValideAlgorithm = () => {\r\n    if (registredAlgorithms.includes(config.algorithm)) return true;\r\n\r\n    // dispatch error\r\n    dispatch(\r\n      alertPush({\r\n        type: \"error\",\r\n        message: `${config.algorithm} algorithm is not registred, please select another one`,\r\n      })\r\n    );\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-span-5 rounded-md shadow-md border border-gray-600 bg-gray-900 text-white p-3\">\r\n      <form onSubmit={submit}>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 gap-y-3 p-6\">\r\n          <div>\r\n            <label htmlFor=\"algorithm\" className=\"text-sm font-medium\">\r\n              Algorithm\r\n            </label>\r\n            <select\r\n              id=\"algorithm\"\r\n              name=\"algorithm\"\r\n              className=\"form-input text-sm bg-gray-800 text-white\"\r\n              value={config.algorithm}\r\n              onChange={handleChange}\r\n            >\r\n              <option disabled value=\"\">\r\n                Choose your algorithm\r\n              </option>\r\n              <option value=\"quicksort\">Quick Sort</option>\r\n              <option value=\"mergesort\">Merge Sort</option>\r\n              <option value=\"heapsort\">Heap Sort</option>\r\n              <option value=\"bubblesort\">Bubble Sort</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"length\" className=\"text-sm font-medium\">\r\n              Array Length : {config.length}\r\n            </label>\r\n            <div className=\"flex justify-between items-center mt-2\">\r\n              <span className=\"text-md font-medium\">5</span>\r\n              <input\r\n                type=\"range\"\r\n                className=\"form-input cursor-pointer\"\r\n                id=\"length\"\r\n                name=\"length\"\r\n                min={config.minLength}\r\n                max={config.maxLength}\r\n                value={config.length}\r\n                onChange={handleChange}\r\n              />\r\n              <span className=\"text-md font-medium\">120</span>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p className=\"font-medium\">Speed : {config.speed / 1000} s</p>\r\n            <div className=\"flex justify-between items-center mt-2\">\r\n              <span className=\"text-md font-medium\">50ms</span>\r\n              <input\r\n                type=\"range\"\r\n                className=\"form-input\"\r\n                id=\"speed\"\r\n                name=\"speed\"\r\n                min={config.minSpeed}\r\n                max={config.maxSpeed}\r\n                value={config.speed}\r\n                onChange={handleChange}\r\n              />\r\n              <span className=\"text-md font-medium\">5s</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex container justify-end\">\r\n          <div className=\"space-x-3\">\r\n            <button\r\n              disabled={isSorting}\r\n              type=\"button\"\r\n              className={`btn border gray text-sm ${\r\n                isSorting ? \"cursor-not-allowed\" : \"\"\r\n              }`}\r\n              onClick={reset}\r\n            >\r\n              <RefreshIcon className=\"h-4 w-4 inline-block -mt-1\" /> Reset\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className={`btn border green text-sm ${\r\n                isSorting ? \"cursor-not-allowed\" : \"\"\r\n              }`}\r\n              disabled={isSorting}\r\n            >\r\n              <AdjustmentsIcon className=\"h-4 w-4 inline-block -mt-1\" /> Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortingForm;\r\n","/**\r\n * Action creatore for Config reducer\r\n */\r\nimport * as actionTypes from \"../action-types/ConfigActionTypes\";\r\n\r\nexport const putConfig = (config) => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.CONFIG_UPDATE,\r\n    payload: config,\r\n  });\r\n};\r\n\r\nexport const resetConfig = () => (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.CONFIG_RESET,\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nconst NumberBar = ({ number, color }) => {\r\n  return (\r\n    <div\r\n      style={{ height: number >= 100 ? \"100%\" : `${number}%` }}\r\n      className={`${color} rounded-md flex-auto text-white bg-white`}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default NumberBar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ChartBarIcon, RefreshIcon } from \"@heroicons/react/solid\";\r\nimport NumberBar from \"./NumberBar\";\r\n\r\nconst Visualizer = ({ colorizer, regenerate, start }) => {\r\n  const { array, isSorted, isSorting } = useSelector((state) => state.array);\r\n  return (\r\n    <div className=\"col-span-5 lg:col-span-3 m-auto bg-gray-900 border border-gray-600 rounded-md shadow-md p-2 w-full h-96 relative\">\r\n      {!isSorting && (\r\n        <div className=\"flex justify-center items-center space-x-3 rounded-md absolute top-0 left-0 h-full w-full bg-gray-500 opacity-0 hover:opacity-100 hover:bg-opacity-50\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn green font-medium uppercase\"\r\n            onClick={start}\r\n          >\r\n            <ChartBarIcon className=\"h-5 w-5 inline-block -mt-1\" />\r\n            Sort\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn gray font-medium uppercase\"\r\n            onClick={regenerate}\r\n          >\r\n            <RefreshIcon className=\"h-5 w-5 inline-block -mt-1\" />\r\n            Regenerate\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div className={`flex items-end justify-around h-full space-x-1`}>\r\n        {array.map((number, index) => (\r\n          <NumberBar\r\n            number={number}\r\n            color={isSorted ? \"bg-green-400\" : colorizer(index)}\r\n            key={index}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Visualizer;\r\n","import React from \"react\";\r\n\r\nconst Array = ({ array, colorizer }) => {\r\n  return (\r\n    <div className=\"row flex-wrap itmes-center justify-center space-x-1\">\r\n      <span className=\"font-medium\">[</span>\r\n      {array.map((item, index) => (\r\n        <div\r\n          key={index}\r\n          className={`rounded-md text-center text-gray-900 ${colorizer(index)}`}\r\n        >\r\n          <p className=\"text-white\">{item},</p>\r\n        </div>\r\n      ))}\r\n      <span className=\"font-medium\">]</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Array;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Array from \"./Array\";\r\n\r\nconst QuickSortStatus = ({ colorizer }) => {\r\n  const { array } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 border border-gray-600 text-white col-span-5 lg:col-span-2 flex flex-col justify-around rounded-md shadow-lg p-3\">\r\n      <Array array={array} colorizer={colorizer} />\r\n      <div className=\"pt-2 space-y-3\">\r\n        <h1 className=\"text-center uppercase font-bold text-xl\">Status</h1>\r\n        <p className=\"text-lg text-center font-medium text-green-400 uppercase\">\r\n          {animation?.action}\r\n        </p>\r\n        <div className=\"grid grid-cols-2 gap-3 gap-y-3 text-center\">\r\n          <p>\r\n            <span className=\"font-medium\">Pivot index : </span>\r\n            {animation?.pivotIndex}\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">Pivot item : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.pivotIndex || -1\r\n              )}`}\r\n            >\r\n              {array[animation?.pivotIndex || -1]}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">First index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.first || -1\r\n              )}`}\r\n            >\r\n              {animation?.first}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">Second index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.second || -1\r\n              )}`}\r\n            >\r\n              {animation?.second}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuickSortStatus;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { alertPush } from \"../redux/action-creators/AlertActions\";\r\nimport {\r\n  sortingArray,\r\n  sortedArray,\r\n  stopSortingArray,\r\n} from \"../redux/action-creators/ArrayActions\";\r\n\r\nconst useAnimation = (sortingAlgorithm) => {\r\n  const { array } = useSelector((state) => state.array);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // trigger sorting function\r\n  const startSorting = () => {\r\n    // isSorting set to true\r\n    dispatch(sortingArray());\r\n    sort()\r\n      .then(() => {\r\n        dispatch(sortedArray());\r\n        dispatch(alertPush({ type: \"success\", message: \"Array sorted !\" }));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(\r\n          alertPush({\r\n            type: \"error\",\r\n            message: \"Error occurred please try again\",\r\n          })\r\n        );\r\n      })\r\n      .finally(() => dispatch(stopSortingArray()));\r\n  };\r\n\r\n  // Sort the array using sorting algorithm\r\n  const sort = async () => {\r\n    await sortingAlgorithm(array, 0, array.length - 1, dispatch);\r\n  };\r\n\r\n  return [startSorting];\r\n};\r\n\r\nexport default useAnimation;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateAnimation } from \"../redux/action-creators/AnimationActions\";\r\nimport { quickSort } from \"../algorithms\";\r\nimport useAnimation from \"./useAnimation\";\r\n\r\nconst useQuickSort = () => {\r\n  const { array, isSorted } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Initial animation state for quick sort\r\n    if (!isSorted) {\r\n      dispatch(\r\n        updateAnimation({\r\n          pivotIndex: array.length - 1,\r\n          action: \"Ready to sort\",\r\n          first: 0,\r\n          second: array.length - 2,\r\n        })\r\n      );\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSorted]);\r\n\r\n  const [startSorting] = useAnimation(quickSort);\r\n\r\n  // colorizer function\r\n  const colorizer = (index) => {\r\n    switch (index) {\r\n      case animation?.pivotIndex:\r\n        return \"bg-green-400\";\r\n      case animation?.second:\r\n        return \"bg-blue-400\";\r\n      case animation?.first:\r\n        return \"bg-red-400\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return [colorizer, startSorting];\r\n};\r\n\r\nexport default useQuickSort;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createArray } from \"../redux/action-creators/ArrayActions\";\r\nimport Visualizer from \"./Visualizer\";\r\nimport QuickSortStatus from \"./status/QuickSortStatus\";\r\nimport useQuickSort from \"../hooks/useQuickSort\";\r\n\r\nconst QuickSort = () => {\r\n  const [colorizer, startSorting] = useQuickSort();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Regenerate new random Array\r\n  const updateArray = () => {\r\n    dispatch(createArray());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Visualizer\r\n        colorizer={colorizer}\r\n        regenerate={updateArray}\r\n        start={startSorting}\r\n      />\r\n      <QuickSortStatus colorizer={colorizer} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuickSort;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Array from \"./Array\";\r\n\r\nconst MergeSortStatus = ({ colorizer }) => {\r\n  const { array } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 border border-gray-600 text-white col-span-5 lg:col-span-2 flex flex-col justify-around rounded-md shadow-lg p-3\">\r\n      <Array array={array} colorizer={colorizer} />\r\n      <div className=\"pt-2 space-y-3\">\r\n        <h1 className=\"text-center uppercase font-bold text-xl\">Status</h1>\r\n        <p className=\"text-lg text-center font-medium text-green-400 uppercase\">\r\n          {animation?.action}\r\n        </p>\r\n        <div className=\"grid grid-cols-2 gap-3 gap-y-3 text-center\">\r\n          <p>\r\n            <span className=\"font-medium\">First index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.first\r\n              )}`}\r\n            >\r\n              {animation?.first}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">Second index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.second\r\n              )}`}\r\n            >\r\n              {animation?.second}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MergeSortStatus;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateAnimation } from \"../redux/action-creators/AnimationActions\";\r\nimport useAnimation from \"./useAnimation\";\r\nimport { mergeSort } from \"../algorithms\";\r\n\r\nconst useMergeSort = () => {\r\n  const { isSorted } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Initial animation state for merge sort\r\n    if (!isSorted) {\r\n      dispatch(\r\n        updateAnimation({\r\n          action: \"Ready to sort\",\r\n          first: 0,\r\n          second: 1,\r\n        })\r\n      );\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSorted]);\r\n\r\n  const [startSorting] = useAnimation(mergeSort);\r\n\r\n  // colorizer function\r\n  const colorizer = (index) => {\r\n    switch (index) {\r\n      case animation?.first:\r\n        return \"bg-red-400\";\r\n      case animation?.second:\r\n        return \"bg-blue-400\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return [colorizer, startSorting];\r\n};\r\n\r\nexport default useMergeSort;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createArray } from \"../redux/action-creators/ArrayActions\";\r\nimport Visualizer from \"./Visualizer\";\r\nimport MergeSortStatus from \"./status/MergeSortStatus\";\r\nimport useMergeSort from \"../hooks/useMergeSort\";\r\n\r\nconst MergeSort = () => {\r\n  const [colorizer, startSorting] = useMergeSort();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Regenerate new random Array\r\n  const updateArray = () => {\r\n    dispatch(createArray());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Visualizer\r\n        colorizer={colorizer}\r\n        regenerate={updateArray}\r\n        start={startSorting}\r\n      />\r\n      <MergeSortStatus colorizer={colorizer} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MergeSort;\r\n","import { EmojiHappyIcon, EmojiSadIcon, XIcon } from \"@heroicons/react/solid\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { alertDelete } from \"./redux/action-creators/AlertActions\";\r\n\r\nconst Alert = () => {\r\n  const { alerts } = useSelector((state) => state.alerts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteAlert = (index) => {\r\n    dispatch(alertDelete(index));\r\n  };\r\n\r\n  const style = {\r\n    success: {\r\n      color: \"bg-green-500\",\r\n      icon: <EmojiHappyIcon className=\"h-6 w-6\" />,\r\n    },\r\n\r\n    error: {\r\n      color: \"bg-red-500\",\r\n      icon: <EmojiSadIcon className=\"h-6 w-6\" />,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed z-20 right-5 bottom-5\">\r\n      <div className=\"space-y-2\">\r\n        {alerts.map((alert, index) => (\r\n          <div\r\n            key={index}\r\n            className={`flex items-center space-x-5 ${\r\n              style[alert.type].color\r\n            } rounded-md shadow-md text-white text-sm font-medium px-4 py-3`}\r\n            role=\"alert\"\r\n          >\r\n            {style[alert.type].icon}\r\n            <div className=\"flex-1\">\r\n              <p>{alert.message}</p>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"p-2\"\r\n                onClick={() => deleteAlert(index)}\r\n              >\r\n                <XIcon className=\"h-4 x-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport useAnimation from \"./useAnimation\";\r\nimport { heapSort } from \"../algorithms\";\r\nimport { updateAnimation } from \"../redux/action-creators/AnimationActions\";\r\n\r\nconst useHeapSort = () => {\r\n  const { isSorted } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Initial animation state for heap sort\r\n    if (!isSorted) {\r\n      dispatch(\r\n        updateAnimation({\r\n          action: \"Ready to sort\",\r\n          parent: -1,\r\n          left: -1,\r\n          right: -1,\r\n        })\r\n      );\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSorted]);\r\n\r\n  const [startSorting] = useAnimation(heapSort);\r\n\r\n  // colorizer function\r\n  const colorizer = (index) => {\r\n    switch (index) {\r\n      case animation?.parent:\r\n        return \"bg-blue-400\";\r\n\r\n      case animation?.right:\r\n      case animation?.left:\r\n        return \"bg-red-400\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return [colorizer, startSorting];\r\n};\r\n\r\nexport default useHeapSort;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Array from \"./Array\";\r\n\r\nconst HeapSortStatus = ({ colorizer }) => {\r\n  const { array } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n  return (\r\n    <div className=\"bg-gray-900 border border-gray-600 text-white col-span-5 lg:col-span-2 flex flex-col justify-around rounded-md shadow-lg p-3\">\r\n      <Array array={array} colorizer={colorizer} />\r\n      <div className=\"pt-2 space-y-3\">\r\n        <h1 className=\"text-center uppercase font-bold text-xl\">Status</h1>\r\n        <p className=\"text-lg text-center font-medium text-green-400 uppercase\">\r\n          {animation?.action}\r\n        </p>\r\n        <div className=\"grid grid-cols-2 gap-3 gap-y-3 text-center\">\r\n          <p>\r\n            <span className=\"font-medium\">Parent index : </span>\r\n            {animation?.parent}\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">Parent value : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.parent\r\n              )}`}\r\n            >\r\n              {array[animation?.parent] || \"\"}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">Left child index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.left\r\n              )}`}\r\n            >\r\n              {animation?.left}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">Right child index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.right\r\n              )}`}\r\n            >\r\n              {animation?.right}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeapSortStatus;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useHeapSort from \"../hooks/useHeapSort\";\r\nimport Visualizer from \"./Visualizer\";\r\nimport { createArray } from \"../redux/action-creators/ArrayActions\";\r\nimport HeapSortStatus from \"./status/HeapSortStatus\";\r\n\r\nconst HeapSort = () => {\r\n  const [colorizer, startSorting] = useHeapSort();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Regenerate new random Array\r\n  const updateArray = () => {\r\n    dispatch(createArray());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Visualizer\r\n        colorizer={colorizer}\r\n        regenerate={updateArray}\r\n        start={startSorting}\r\n      />\r\n      <HeapSortStatus colorizer={colorizer} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeapSort;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport useAnimation from \"./useAnimation\";\r\nimport { bubbleSort } from \"../algorithms\";\r\nimport { updateAnimation } from \"../redux/action-creators/AnimationActions\";\r\n\r\nconst useBubbleSort = () => {\r\n  const { isSorted } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Initial animation state for bubble sort\r\n    if (!isSorted) {\r\n      dispatch(\r\n        updateAnimation({\r\n          action: \"Ready to sort\",\r\n          first: 0,\r\n          second: 0,\r\n        })\r\n      );\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSorted]);\r\n\r\n  const [startSorting] = useAnimation(bubbleSort);\r\n\r\n  // colorizer function\r\n  const colorizer = (index) => {\r\n    switch (index) {\r\n      case animation?.first:\r\n        return \"bg-blue-400\";\r\n      case animation?.second:\r\n        return \"bg-red-400\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return [colorizer, startSorting];\r\n};\r\n\r\nexport default useBubbleSort;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Array from \"./Array\";\r\n\r\nconst BubbleSortStatus = ({ colorizer }) => {\r\n  const { array } = useSelector((state) => state.array);\r\n  const { animation } = useSelector((state) => state.animation);\r\n  return (\r\n    <div className=\"bg-gray-900 border border-gray-600 text-white col-span-5 lg:col-span-2 flex flex-col justify-around rounded-md shadow-lg p-3\">\r\n      <Array array={array} colorizer={colorizer} />\r\n      <div className=\"pt-2 space-y-3\">\r\n        <h1 className=\"text-center uppercase font-bold text-xl\">Status</h1>\r\n        <p className=\"text-lg text-center font-medium text-green-400 uppercase\">\r\n          {animation?.action}\r\n        </p>\r\n        <div className=\"grid grid-cols-2 gap-3 gap-y-3 text-center\">\r\n          <p>\r\n            <span className=\"font-medium\">First index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.first || -1\r\n              )}`}\r\n            >\r\n              {animation?.first}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"font-medium\">Second index : </span>\r\n            <span\r\n              className={`rounded-md p-1 text-white ${colorizer(\r\n                animation?.second || -1\r\n              )}`}\r\n            >\r\n              {animation?.second}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BubbleSortStatus;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useBubbleSort from \"../hooks/useBubbleSort\";\r\nimport BubbleSortStatus from \"./status/BubbleSortStatus\";\r\nimport Visualizer from \"./Visualizer\";\r\nimport { createArray } from \"../redux/action-creators/ArrayActions\";\r\n\r\nconst BubbleSort = () => {\r\n  const [colorizer, startSorting] = useBubbleSort();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Regenerate new random Array\r\n  const updateArray = () => {\r\n    dispatch(createArray());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Visualizer\r\n        colorizer={colorizer}\r\n        regenerate={updateArray}\r\n        start={startSorting}\r\n      />\r\n      <BubbleSortStatus colorizer={colorizer} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BubbleSort;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { HeartIcon } from \"@heroicons/react/solid\";\r\nimport { registredAlgorithms } from \"./algorithms\";\r\nimport { createArray } from \"./redux/action-creators/ArrayActions\";\r\nimport SortingForm from \"./components/SortingForm\";\r\nimport QuickSort from \"./components/QuickSort\";\r\nimport MergeSort from \"./components/MergeSort\";\r\nimport Alert from \"./Alert\";\r\nimport HeapSort from \"./components/HeapSort\";\r\nimport BubbleSort from \"./components/BubbleSort\";\r\n\r\nconst App = () => {\r\n  const config = useSelector((state) => state.config);\r\n  const [currentAlgo, setCurrentAlgo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Start the app\r\n  const createApp = () => {\r\n    setCurrentAlgo(config.algorithm);\r\n    dispatch(createArray());\r\n  };\r\n\r\n  // Get right component based on chosen algorithm\r\n  const getComponent = () => {\r\n    switch (currentAlgo) {\r\n      case registredAlgorithms[0]:\r\n        return <QuickSort />;\r\n\r\n      case registredAlgorithms[1]:\r\n        return <MergeSort />;\r\n\r\n      case registredAlgorithms[2]:\r\n        return <HeapSort />;\r\n\r\n      case registredAlgorithms[3]:\r\n        return <BubbleSort />;\r\n\r\n      default:\r\n        return (\r\n          <div className=\"h-96 p-2 lg:col-span-3 lg:col-start-2 flex items-center justify-center\">\r\n            <div className=\"text-xl text-gray-400\">\r\n              Please select one of the avilable algorithms.\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Alert />\r\n      <div className=\"p-2 h-full w-full bg-gray-800\">\r\n        <div className=\"border-b border-gray-300\">\r\n          <div className=\"container text-white\">\r\n            <div className=\"row justify-center\">\r\n              <h1 className=\"text-4xl text-gray-300 font- uppercase\">\r\n                sorting visualizer\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container py-8\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-2 gap-y-3\">\r\n            <SortingForm createApp={createApp} />\r\n            {getComponent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-gray-900 h-10 flex justify-center items-center text-white uppercase\">\r\n        Made with <HeartIcon className=\"h-4 w-4 inline-block text-red-600\" /> By\r\n        Aniss Nahim\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/**\r\n * ArrayReducer for managing main array and the animation\r\n */\r\nimport * as actionTypes from \"../action-types/ArrayActionTypes\";\r\n\r\nconst initState = {\r\n  array: [],\r\n  isSorted: false,\r\n  isSorting: false,\r\n};\r\n\r\nconst arrayReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GENERATE_RANDOM_ARRAY:\r\n      return {\r\n        ...state,\r\n        array: action.payload,\r\n        isSorted: false,\r\n        isSorting: false,\r\n      };\r\n\r\n    case actionTypes.START_SORTING:\r\n      return {\r\n        ...state,\r\n        isSorted: false,\r\n        isSorting: true,\r\n      };\r\n\r\n    case actionTypes.STOP_SORTING:\r\n      return {\r\n        ...state,\r\n        isSorting: false,\r\n      };\r\n\r\n    case actionTypes.ARRAY_SORTED:\r\n      return {\r\n        ...state,\r\n        isSorted: true,\r\n      };\r\n\r\n    case actionTypes.ARRAY_UPDATED:\r\n      return {\r\n        ...state,\r\n        array: [...action.payload],\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default arrayReducer;\r\n","/**\r\n * AnimationReducer for managing the animation object\r\n */\r\nimport * as actionTypes from \"../action-types/AnimationActionTypes\";\r\n\r\nconst initState = {\r\n  animation: {},\r\n};\r\n\r\nconst animationReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ANIMATION_CLEAR:\r\n      return {\r\n        ...state,\r\n        animation: {},\r\n      };\r\n\r\n    case actionTypes.ANIMATION_UPDATE:\r\n      return {\r\n        ...state,\r\n        animation: { ...action.payload },\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default animationReducer;\r\n","/**\r\n * ConfigReducer for managing form values\r\n */\r\nimport * as actionTypes from \"../action-types/ConfigActionTypes\";\r\n\r\nconst initState = {\r\n  algorithm: \"\",\r\n  speed: 150,\r\n  minSpeed: 50,\r\n  maxSpeed: 5000,\r\n  length: 20,\r\n  maxLength: 120,\r\n  minLength: 5,\r\n  maxValue: 100,\r\n  minValue: 5,\r\n};\r\n\r\nconst configReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CONFIG_UPDATE:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    case actionTypes.CONFIG_RESET:\r\n      return initState;\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default configReducer;\r\n","/**\r\n * AlertReducer for managing Alert notifications\r\n */\r\nimport * as actionTypes from \"../action-types/AlertActionTypes\";\r\n\r\nconst initState = {\r\n  alerts: [],\r\n};\r\n\r\nconst alertReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ALERT_CREATED:\r\n      if (state.alerts.length >= 3) {\r\n        return {\r\n          ...state,\r\n          alerts: [...state.alerts.slice(1), action.payload],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        alerts: [...state.alerts, action.payload],\r\n      };\r\n\r\n    case actionTypes.ALERT_DELETED:\r\n      return {\r\n        ...state,\r\n        alerts: state.alerts.filter((alert, index) => index !== action.payload),\r\n      };\r\n\r\n    case actionTypes.ALERT_AUTO_REMOVE:\r\n      return {\r\n        ...state,\r\n        alerts: [...state.alerts.slice(1)],\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default alertReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport arrayReducer from \"./ArrayReducer\";\r\nimport animationReducer from \"./AnimationReducer\";\r\nimport configReducer from \"./ConfigReducer\";\r\nimport alertReducer from \"./AlertReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  array: arrayReducer,\r\n  animation: animationReducer,\r\n  config: configReducer,\r\n  alerts: alertReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initState = {};\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initState,\r\n  applyMiddleware(...middlewares)\r\n  // compose(\r\n  //   applyMiddleware(...middlewares),\r\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  // )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}